Terminals unused in grammar

   ENDFILE
   ERROR


State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier ID SEMI
    7                | type_specifier ID LBRACKET NUM RBRACKET SEMI

    8 type_specifier: INT
    9               | VOID

   10 $@1: %empty

   11 fun_declaration: type_specifier ID $@1 LPAREN params RPAREN compound_stmt

   12 params: param_list
   13       | VOID

   14 param_list: param_list COMMA param
   15           | param

   16 param: type_specifier ID
   17      | type_specifier ID LBRACKET RBRACKET

   18 compound_stmt: LBRACE local_declarations statement_list RBRACE

   19 local_declarations: local_declarations var_declaration
   20                   | %empty

   21 statement_list: statement_list statement
   22               | %empty

   23 statement: expression_stmt
   24          | compound_stmt
   25          | selection_stmt
   26          | iteration_stmt
   27          | return_stmt

   28 expression_stmt: expression SEMI
   29                | SEMI

   30 selection_stmt: IF LPAREN expression RPAREN statement
   31               | IF LPAREN expression RPAREN statement ELSE statement

   32 iteration_stmt: WHILE LPAREN expression RPAREN statement

   33 return_stmt: RETURN SEMI
   34            | RETURN expression SEMI

   35 expression: var ASSIGN expression
   36           | simple_expression

   37 var: ID

   38 $@2: %empty

   39 var: ID $@2 LBRACKET expression RBRACKET

   40 simple_expression: additive_expression relop additive_expression
   41                  | additive_expression

   42 relop: LTE
   43      | LT
   44      | GT
   45      | GTE
   46      | EQ
   47      | NEQ

   48 additive_expression: additive_expression addop term
   49                    | term

   50 addop: PLUS
   51      | MINUS

   52 term: term mulop factor
   53     | factor

   54 mulop: TIMES
   55      | DIV

   56 factor: LPAREN expression RPAREN
   57       | var
   58       | call
   59       | NUM

   60 $@3: %empty

   61 call: ID $@3 LPAREN args RPAREN

   62 args: arg_list
   63     | %empty

   64 arg_list: arg_list COMMA expression
   65         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ENDFILE (258)
ERROR (259)
ELSE (260) 31
IF (261) 30 31
INT (262) 8
RETURN (263) 33 34
VOID (264) 9 13
WHILE (265) 32
PLUS (266) 50
MINUS (267) 51
TIMES (268) 54
DIV (269) 55
LT (270) 43
LTE (271) 42
GT (272) 44
GTE (273) 45
EQ (274) 46
NEQ (275) 47
ASSIGN (276) 35
SEMI (277) 6 7 28 29 33 34
COMMA (278) 14 64
LPAREN (279) 11 30 31 32 56 61
RPAREN (280) 11 30 31 32 56 61
LBRACKET (281) 7 17 39
RBRACKET (282) 7 17 39
LBRACE (283) 18
RBRACE (284) 18
ID (285) 6 7 11 16 17 37 39 61
NUM (286) 7 59


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
declaration_list (34)
    on left: 2 3, on right: 1 2
declaration (35)
    on left: 4 5, on right: 2 3
var_declaration (36)
    on left: 6 7, on right: 4 19
type_specifier (37)
    on left: 8 9, on right: 6 7 11 16 17
fun_declaration (38)
    on left: 11, on right: 5
$@1 (39)
    on left: 10, on right: 11
params (40)
    on left: 12 13, on right: 11
param_list (41)
    on left: 14 15, on right: 12 14
param (42)
    on left: 16 17, on right: 14 15
compound_stmt (43)
    on left: 18, on right: 11 24
local_declarations (44)
    on left: 19 20, on right: 18 19
statement_list (45)
    on left: 21 22, on right: 18 21
statement (46)
    on left: 23 24 25 26 27, on right: 21 30 31 32
expression_stmt (47)
    on left: 28 29, on right: 23
selection_stmt (48)
    on left: 30 31, on right: 25
iteration_stmt (49)
    on left: 32, on right: 26
return_stmt (50)
    on left: 33 34, on right: 27
expression (51)
    on left: 35 36, on right: 28 30 31 32 34 35 39 56 64 65
var (52)
    on left: 37 39, on right: 35 57
$@2 (53)
    on left: 38, on right: 39
simple_expression (54)
    on left: 40 41, on right: 36
relop (55)
    on left: 42 43 44 45 46 47, on right: 40
additive_expression (56)
    on left: 48 49, on right: 40 41 48
addop (57)
    on left: 50 51, on right: 48
term (58)
    on left: 52 53, on right: 48 49 52
mulop (59)
    on left: 54 55, on right: 52
factor (60)
    on left: 56 57 58 59, on right: 52 53
call (61)
    on left: 61, on right: 58
$@3 (62)
    on left: 60, on right: 61
args (63)
    on left: 62 63, on right: 61
arg_list (64)
    on left: 64 65, on right: 62 64


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    type_specifier    go to state 7
    fun_declaration   go to state 8


State 1

    8 type_specifier: INT .

    $default  reduce using rule 8 (type_specifier)


State 2

    9 type_specifier: VOID .

    $default  reduce using rule 9 (type_specifier)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type_specifier   go to state 7
    fun_declaration  go to state 8


State 5

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type_specifier . ID SEMI
    7                | type_specifier . ID LBRACKET NUM RBRACKET SEMI
   11 fun_declaration: type_specifier . ID $@1 LPAREN params RPAREN compound_stmt

    ID  shift, and go to state 11


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 11

    6 var_declaration: type_specifier ID . SEMI
    7                | type_specifier ID . LBRACKET NUM RBRACKET SEMI
   11 fun_declaration: type_specifier ID . $@1 LPAREN params RPAREN compound_stmt

    SEMI      shift, and go to state 12
    LBRACKET  shift, and go to state 13

    $default  reduce using rule 10 ($@1)

    $@1  go to state 14


State 12

    6 var_declaration: type_specifier ID SEMI .

    $default  reduce using rule 6 (var_declaration)


State 13

    7 var_declaration: type_specifier ID LBRACKET . NUM RBRACKET SEMI

    NUM  shift, and go to state 15


State 14

   11 fun_declaration: type_specifier ID $@1 . LPAREN params RPAREN compound_stmt

    LPAREN  shift, and go to state 16


State 15

    7 var_declaration: type_specifier ID LBRACKET NUM . RBRACKET SEMI

    RBRACKET  shift, and go to state 17


State 16

   11 fun_declaration: type_specifier ID $@1 LPAREN . params RPAREN compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 18

    type_specifier  go to state 19
    params          go to state 20
    param_list      go to state 21
    param           go to state 22


State 17

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET . SEMI

    SEMI  shift, and go to state 23


State 18

    9 type_specifier: VOID .
   13 params: VOID .

    RPAREN    reduce using rule 13 (params)
    $default  reduce using rule 9 (type_specifier)


State 19

   16 param: type_specifier . ID
   17      | type_specifier . ID LBRACKET RBRACKET

    ID  shift, and go to state 24


State 20

   11 fun_declaration: type_specifier ID $@1 LPAREN params . RPAREN compound_stmt

    RPAREN  shift, and go to state 25


State 21

   12 params: param_list .
   14 param_list: param_list . COMMA param

    COMMA  shift, and go to state 26

    $default  reduce using rule 12 (params)


State 22

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


State 23

    7 var_declaration: type_specifier ID LBRACKET NUM RBRACKET SEMI .

    $default  reduce using rule 7 (var_declaration)


State 24

   16 param: type_specifier ID .
   17      | type_specifier ID . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 27

    $default  reduce using rule 16 (param)


State 25

   11 fun_declaration: type_specifier ID $@1 LPAREN params RPAREN . compound_stmt

    LBRACE  shift, and go to state 28

    compound_stmt  go to state 29


State 26

   14 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_specifier  go to state 19
    param           go to state 30


State 27

   17 param: type_specifier ID LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 31


State 28

   18 compound_stmt: LBRACE . local_declarations statement_list RBRACE

    $default  reduce using rule 20 (local_declarations)

    local_declarations  go to state 32


State 29

   11 fun_declaration: type_specifier ID $@1 LPAREN params RPAREN compound_stmt .

    $default  reduce using rule 11 (fun_declaration)


State 30

   14 param_list: param_list COMMA param .

    $default  reduce using rule 14 (param_list)


State 31

   17 param: type_specifier ID LBRACKET RBRACKET .

    $default  reduce using rule 17 (param)


State 32

   18 compound_stmt: LBRACE local_declarations . statement_list RBRACE
   19 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 22 (statement_list)

    var_declaration  go to state 33
    type_specifier   go to state 34
    statement_list   go to state 35


State 33

   19 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 19 (local_declarations)


State 34

    6 var_declaration: type_specifier . ID SEMI
    7                | type_specifier . ID LBRACKET NUM RBRACKET SEMI

    ID  shift, and go to state 36


State 35

   18 compound_stmt: LBRACE local_declarations statement_list . RBRACE
   21 statement_list: statement_list . statement

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    SEMI    shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 28
    RBRACE  shift, and go to state 42
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 46
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 36

    6 var_declaration: type_specifier ID . SEMI
    7                | type_specifier ID . LBRACKET NUM RBRACKET SEMI

    SEMI      shift, and go to state 12
    LBRACKET  shift, and go to state 13


State 37

   30 selection_stmt: IF . LPAREN expression RPAREN statement
   31               | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 58


State 38

   33 return_stmt: RETURN . SEMI
   34            | RETURN . expression SEMI

    SEMI    shift, and go to state 59
    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 60
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 39

   32 iteration_stmt: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 61


State 40

   29 expression_stmt: SEMI .

    $default  reduce using rule 29 (expression_stmt)


State 41

   56 factor: LPAREN . expression RPAREN

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 62
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 42

   18 compound_stmt: LBRACE local_declarations statement_list RBRACE .

    $default  reduce using rule 18 (compound_stmt)


State 43

   37 var: ID .
   39    | ID . $@2 LBRACKET expression RBRACKET
   61 call: ID . $@3 LPAREN args RPAREN

    LPAREN    reduce using rule 60 ($@3)
    LBRACKET  reduce using rule 38 ($@2)
    $default  reduce using rule 37 (var)

    $@2  go to state 63
    $@3  go to state 64


State 44

   59 factor: NUM .

    $default  reduce using rule 59 (factor)


State 45

   24 statement: compound_stmt .

    $default  reduce using rule 24 (statement)


State 46

   21 statement_list: statement_list statement .

    $default  reduce using rule 21 (statement_list)


State 47

   23 statement: expression_stmt .

    $default  reduce using rule 23 (statement)


State 48

   25 statement: selection_stmt .

    $default  reduce using rule 25 (statement)


State 49

   26 statement: iteration_stmt .

    $default  reduce using rule 26 (statement)


State 50

   27 statement: return_stmt .

    $default  reduce using rule 27 (statement)


State 51

   28 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 65


State 52

   35 expression: var . ASSIGN expression
   57 factor: var .

    ASSIGN  shift, and go to state 66

    $default  reduce using rule 57 (factor)


State 53

   36 expression: simple_expression .

    $default  reduce using rule 36 (expression)


State 54

   40 simple_expression: additive_expression . relop additive_expression
   41                  | additive_expression .
   48 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    LT     shift, and go to state 69
    LTE    shift, and go to state 70
    GT     shift, and go to state 71
    GTE    shift, and go to state 72
    EQ     shift, and go to state 73
    NEQ    shift, and go to state 74

    $default  reduce using rule 41 (simple_expression)

    relop  go to state 75
    addop  go to state 76


State 55

   49 additive_expression: term .
   52 term: term . mulop factor

    TIMES  shift, and go to state 77
    DIV    shift, and go to state 78

    $default  reduce using rule 49 (additive_expression)

    mulop  go to state 79


State 56

   53 term: factor .

    $default  reduce using rule 53 (term)


State 57

   58 factor: call .

    $default  reduce using rule 58 (factor)


State 58

   30 selection_stmt: IF LPAREN . expression RPAREN statement
   31               | IF LPAREN . expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 80
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 59

   33 return_stmt: RETURN SEMI .

    $default  reduce using rule 33 (return_stmt)


State 60

   34 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 81


State 61

   32 iteration_stmt: WHILE LPAREN . expression RPAREN statement

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 82
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 62

   56 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 83


State 63

   39 var: ID $@2 . LBRACKET expression RBRACKET

    LBRACKET  shift, and go to state 84


State 64

   61 call: ID $@3 . LPAREN args RPAREN

    LPAREN  shift, and go to state 85


State 65

   28 expression_stmt: expression SEMI .

    $default  reduce using rule 28 (expression_stmt)


State 66

   35 expression: var ASSIGN . expression

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 86
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 67

   50 addop: PLUS .

    $default  reduce using rule 50 (addop)


State 68

   51 addop: MINUS .

    $default  reduce using rule 51 (addop)


State 69

   43 relop: LT .

    $default  reduce using rule 43 (relop)


State 70

   42 relop: LTE .

    $default  reduce using rule 42 (relop)


State 71

   44 relop: GT .

    $default  reduce using rule 44 (relop)


State 72

   45 relop: GTE .

    $default  reduce using rule 45 (relop)


State 73

   46 relop: EQ .

    $default  reduce using rule 46 (relop)


State 74

   47 relop: NEQ .

    $default  reduce using rule 47 (relop)


State 75

   40 simple_expression: additive_expression relop . additive_expression

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    var                  go to state 87
    additive_expression  go to state 88
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 76

   48 additive_expression: additive_expression addop . term

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    var     go to state 87
    term    go to state 89
    factor  go to state 56
    call    go to state 57


State 77

   54 mulop: TIMES .

    $default  reduce using rule 54 (mulop)


State 78

   55 mulop: DIV .

    $default  reduce using rule 55 (mulop)


State 79

   52 term: term mulop . factor

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    var     go to state 87
    factor  go to state 90
    call    go to state 57


State 80

   30 selection_stmt: IF LPAREN expression . RPAREN statement
   31               | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 91


State 81

   34 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 34 (return_stmt)


State 82

   32 iteration_stmt: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 92


State 83

   56 factor: LPAREN expression RPAREN .

    $default  reduce using rule 56 (factor)


State 84

   39 var: ID $@2 LBRACKET . expression RBRACKET

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 93
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 85

   61 call: ID $@3 LPAREN . args RPAREN

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    $default  reduce using rule 63 (args)

    expression           go to state 94
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57
    args                 go to state 95
    arg_list             go to state 96


State 86

   35 expression: var ASSIGN expression .

    $default  reduce using rule 35 (expression)


State 87

   57 factor: var .

    $default  reduce using rule 57 (factor)


State 88

   40 simple_expression: additive_expression relop additive_expression .
   48 additive_expression: additive_expression . addop term

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68

    $default  reduce using rule 40 (simple_expression)

    addop  go to state 76


State 89

   48 additive_expression: additive_expression addop term .
   52 term: term . mulop factor

    TIMES  shift, and go to state 77
    DIV    shift, and go to state 78

    $default  reduce using rule 48 (additive_expression)

    mulop  go to state 79


State 90

   52 term: term mulop factor .

    $default  reduce using rule 52 (term)


State 91

   30 selection_stmt: IF LPAREN expression RPAREN . statement
   31               | IF LPAREN expression RPAREN . statement ELSE statement

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    SEMI    shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 28
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 97
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 92

   32 iteration_stmt: WHILE LPAREN expression RPAREN . statement

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    SEMI    shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 28
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 98
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 93

   39 var: ID $@2 LBRACKET expression . RBRACKET

    RBRACKET  shift, and go to state 99


State 94

   65 arg_list: expression .

    $default  reduce using rule 65 (arg_list)


State 95

   61 call: ID $@3 LPAREN args . RPAREN

    RPAREN  shift, and go to state 100


State 96

   62 args: arg_list .
   64 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 101

    $default  reduce using rule 62 (args)


State 97

   30 selection_stmt: IF LPAREN expression RPAREN statement .
   31               | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 102

    ELSE      [reduce using rule 30 (selection_stmt)]
    $default  reduce using rule 30 (selection_stmt)


State 98

   32 iteration_stmt: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 32 (iteration_stmt)


State 99

   39 var: ID $@2 LBRACKET expression RBRACKET .

    $default  reduce using rule 39 (var)


State 100

   61 call: ID $@3 LPAREN args RPAREN .

    $default  reduce using rule 61 (call)


State 101

   64 arg_list: arg_list COMMA . expression

    LPAREN  shift, and go to state 41
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    expression           go to state 103
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 102

   31 selection_stmt: IF LPAREN expression RPAREN statement ELSE . statement

    IF      shift, and go to state 37
    RETURN  shift, and go to state 38
    WHILE   shift, and go to state 39
    SEMI    shift, and go to state 40
    LPAREN  shift, and go to state 41
    LBRACE  shift, and go to state 28
    ID      shift, and go to state 43
    NUM     shift, and go to state 44

    compound_stmt        go to state 45
    statement            go to state 104
    expression_stmt      go to state 47
    selection_stmt       go to state 48
    iteration_stmt       go to state 49
    return_stmt          go to state 50
    expression           go to state 51
    var                  go to state 52
    simple_expression    go to state 53
    additive_expression  go to state 54
    term                 go to state 55
    factor               go to state 56
    call                 go to state 57


State 103

   64 arg_list: arg_list COMMA expression .

    $default  reduce using rule 64 (arg_list)


State 104

   31 selection_stmt: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 31 (selection_stmt)
